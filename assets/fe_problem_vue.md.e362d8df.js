import{_ as l,c as e,z as s,t as o,a,O as p,o as t}from"./chunks/framework.48867dda.js";const v=JSON.parse('{"title":"Vue 合集","description":"","frontmatter":{},"headers":[],"relativePath":"fe/problem/vue.md"}'),c={name:"fe/problem/vue.md"},r=s("h1",{id:"vue-合集",tabindex:"-1"},[a("Vue 合集 "),s("a",{class:"header-anchor",href:"#vue-合集","aria-label":'Permalink to "Vue 合集"'},"​")],-1),i=s("h2",{id:"初始化页面闪动问题",tabindex:"-1"},[a("初始化页面闪动问题 "),s("a",{class:"header-anchor",href:"#初始化页面闪动问题","aria-label":'Permalink to "初始化页面闪动问题"'},"​")],-1),D=p(`<div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">v-cloak</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> none</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* 如果没有彻底解决问题，则在根元素加上 */</span></span>
<span class="line"><span style="color:#A6ACCD;">style=&quot;display: none&quot;;</span></span>
<span class="line"><span style="color:#A6ACCD;">:style= &quot;</span><span style="color:#89DDFF;">{</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">block</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">&quot;;</span></span></code></pre></div><h2 id="data-内部不支持字段以-和-开头-会有警告" tabindex="-1">data 内部不支持字段以$和_开头，会有警告 <a class="header-anchor" href="#data-内部不支持字段以-和-开头-会有警告" aria-label="Permalink to &quot;data 内部不支持字段以$和\\_开头，会有警告&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 警告信息</span></span>
<span class="line"><span style="color:#A6ACCD;">[Vue warn]: </span><span style="color:#82AAFF;">setup</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> property </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_list</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> should not start with </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">$</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> or </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> which are reserved prefixes for Vue internals</span><span style="color:#89DDFF;">.</span></span></code></pre></div><h2 id="vue2-与-vue3-中-ref-写法上的区别" tabindex="-1">vue2 与 vue3 中 ref 写法上的区别 <a class="header-anchor" href="#vue2-与-vue3-中-ref-写法上的区别" aria-label="Permalink to &quot;vue2 与 vue3 中 ref 写法上的区别&quot;">​</a></h2><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ref</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demoRef</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// vue2</span></span>
<span class="line"><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">$refs</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">demoRef</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// vue3</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> tableRef </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  tableRef</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,6);function y(n,F,C,u,d,A){return t(),e("div",null,[r,i,s("p",null,"使用 vue 开发时，在 vue 初始化之前，由于 div 是不归 vue 管的，所以我们写的代码在还没有解析的情况下会容易出现花屏现象，看到类似于"+o(n.message)+"的字样，虽然一般情况下这个时间很短暂，但是还是有必要让解决这个问题的。",1),D])}const f=l(c,[["render",y]]);export{v as __pageData,f as default};
